# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-10-09 11:48
from __future__ import unicode_literals

import adventures.models.mixins
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('adventures', '0003_auto_20161009_1146'),
    ]

    operations = [
        migrations.CreateModel(
            name='Adventure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('date', models.DateField()),
                ('format', models.CharField(max_length=128)),
                ('min_level', models.IntegerField()),
                ('max_level', models.IntegerField()),
                ('min_characters', models.IntegerField()),
                ('max_characters', models.IntegerField()),
            ],
            bases=(models.Model, adventures.models.mixins.TimestampMixin, adventures.models.mixins.DescriptionNotesMixin),
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
            bases=(models.Model, adventures.models.mixins.TimestampMixin, adventures.models.mixins.DescriptionNotesMixin),
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('level', models.IntegerField()),
            ],
            bases=(models.Model, adventures.models.mixins.TimestampMixin, adventures.models.mixins.DescriptionNotesMixin),
        ),
        migrations.CreateModel(
            name='Edition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
            bases=(models.Model, adventures.models.mixins.TimestampMixin, adventures.models.mixins.DescriptionNotesMixin),
        ),
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
            bases=(models.Model, adventures.models.mixins.TimestampMixin, adventures.models.mixins.DescriptionNotesMixin),
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('adventure_item', models.BooleanField(default=False, help_text='Flag to state whether theitem is an adventure item - i.e.specific to the adventure in whichit appears')),
            ],
            bases=(models.Model, adventures.models.mixins.TimestampMixin, adventures.models.mixins.DescriptionNotesMixin),
        ),
        migrations.CreateModel(
            name='ItemModifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stat', models.CharField(choices=[('ATK', 'Attack'), ('DMG', 'Damage'), ('STR', 'Strength'), ('DEX', 'Dexterity'), ('CON', 'Constitution'), ('INT', 'Intelligence'), ('WIS', 'Wisdom'), ('CHA', 'Charisma')], max_length=3)),
                ('value', models.IntegerField()),
                ('condition', models.CharField(max_length=128)),
            ],
            bases=(models.Model, adventures.models.mixins.TimestampMixin),
        ),
        migrations.CreateModel(
            name='ItemType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
            bases=(models.Model, adventures.models.mixins.TimestampMixin, adventures.models.mixins.DescriptionNotesMixin),
        ),
        migrations.CreateModel(
            name='Monster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('level', models.IntegerField()),
            ],
            bases=(models.Model, adventures.models.mixins.TimestampMixin, adventures.models.mixins.DescriptionNotesMixin),
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
            bases=(models.Model, adventures.models.mixins.TimestampMixin, adventures.models.mixins.DescriptionNotesMixin),
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
            bases=(models.Model, adventures.models.mixins.TimestampMixin, adventures.models.mixins.DescriptionNotesMixin),
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='settings', to='adventures.Environment')),
            ],
            bases=(models.Model, adventures.models.mixins.TimestampMixin, adventures.models.mixins.DescriptionNotesMixin),
        ),
        migrations.AddField(
            model_name='monster',
            name='race',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='monsters', to='adventures.Race'),
        ),
        migrations.AddField(
            model_name='item',
            name='modifier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='items', to='adventures.ItemModifier'),
        ),
        migrations.AddField(
            model_name='item',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='items', to='adventures.ItemType'),
        ),
        migrations.AddField(
            model_name='character',
            name='race',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='characters', to='adventures.Race'),
        ),
        migrations.AddField(
            model_name='adventure',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='adventures', to='adventures.Author'),
        ),
        migrations.AddField(
            model_name='adventure',
            name='characters',
            field=models.ManyToManyField(related_name='adventures', to='adventures.Character'),
        ),
        migrations.AddField(
            model_name='adventure',
            name='edition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='adventures', to='adventures.Edition'),
        ),
        migrations.AddField(
            model_name='adventure',
            name='items',
            field=models.ManyToManyField(related_name='adventures', to='adventures.Item'),
        ),
        migrations.AddField(
            model_name='adventure',
            name='monsters',
            field=models.ManyToManyField(related_name='adventures', to='adventures.Monster'),
        ),
        migrations.AddField(
            model_name='adventure',
            name='publisher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='adventures', to='adventures.Publisher'),
        ),
        migrations.AddField(
            model_name='adventure',
            name='setting',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='adventures', to='adventures.Setting'),
        ),
    ]
